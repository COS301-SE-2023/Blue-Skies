@using BlazorApp.Components.Base
@inject ProtectedSessionStorage ProtectedSessionStore

<div class="mt-20 text-center">
    <Heading>
        <Header>
            <h1 class="text-3xl">Your results in numbers</h1>
        </Header>
        <Subscript>
            <p class="text-primary-700">The following numbers are based on your location.</p>
        </Subscript>
    </Heading>
</div>
<div class="flex px-4 flex-col lg:flex-row bg-red-300 justify-center mt-16">
    <div class="">
        <Image ImageName="Solarscore.png" alt="Solar Score" css="scale-90"/>
    </div>
    <div class="grid grid-cols-1 mx-auto md:grid-cols-2 gap-10">
        <Card css="border-2 border-primary-300 w-80 h-80 my-auto">
            <div class="bg-gray-100 shadow-md rounded-3xl  p-4 w-20 ">
                <Image ImageName="Sale.svg" alt="Sale" css="scale-150"/>
            </div>
            <h1  class="text-xl text-primary-800 font-semibold mt-3">Solar Score</h1>
            <div class="flex gap-1 mt-3">
                <p class="text-5xl text-primary-900 font-semibold">@solarScore</p>
                <p class="text-5xl text-gray-400 font-bold">%</p>
            </div>
        </Card>
        <Card css="border-2  border-primary-300 p-4 w-80 h-80 flex my-auto flex-col">
            <div class="bg-gray-100 shadow-md rounded-3xl p-4 w-20 ">
                <Image ImageName="History.svg" alt="Sale" css="scale-150"/>
            </div>
            <h1  class="text-xl text-primary-800 font-semibold mt-3">Usable hours of sunlight per day</h1>
            <div class="flex gap-1 mt-3">
                <p class="text-5xl text-primary-900 font-semibold">@dayLightHours</p>
                <p class="text-5xl text-gray-400 font-bold">h</p>
            </div>
        </Card>
        <Card css="border-2  border-primary-300 p-4 w-80 h-80">
            <div class="bg-gray-100 shadow-md rounded-3xl p-4 w-20 ">
                <Image ImageName="Accumulator.svg" alt="Sale" css="scale-150"/>
            </div>
            <h1  class="text-xl text-primary-800 font-semibold mt-3">Avg Energy Production</h1>
            <div class="flex gap-1 mt-3">
                <p class="text-5xl text-primary-900 font-semibold">129</p>
                <p class="text-5xl text-gray-400 font-bold">kw/h</p>
            </div>
        </Card>
        <Card css="border-2 flex flex-col gap-4 border-primary-300 p-4 w-80 h-80">
            <h1  class="text-xl text-primary-800 font-semibold mt-3">Solar System Used for Calculations</h1>
            <div class="flex justify-evenly">
                 <div onclick="@(() => SetSystemSize("5kw"))" class=" flex shadow-md transition-all duration-500  @(SystemSize == "5kw" ? "bg-primary-500 scale-110 text-gray-100 " : "bg-gray-100 text-primary-900 hover:scale-110 ") rounded-2xl justify-center items-center w-16 h-16">
                    <p class=" font-semibold">5kw</p>
                </div>
                <div onclick="@(() => SetSystemSize("8kw"))" class="flex shadow-md transition-all duration-500 @(SystemSize == "8kw" ? "bg-primary-500 scale-110 text-gray-100 " : "bg-gray-100 text-primary-900 hover:scale-110 ") rounded-2xl justify-center items-center w-16 h-16">
                    <p class="font-semibold">8kw</p>
                </div>
                <div onclick="@(() => SetSystemSize("12kw"))" class="flex shadow-md transition-all duration-500 @(SystemSize == "12kw" ? "bg-primary-500 scale-110 text-gray-100 " : "bg-gray-100 text-primary-900 hover:scale-110 ") rounded-2xl justify-center items-center w-16 h-16">
                    <p class="font-semibold">12kw</p>
                </div>
            </div>
            <div class="flex gap-2 mt-3">
                <p class="text-5xl text-primary-900 font-semibold">@PanelCount</p>
                <p class="text-4xl text-gray-400 translate-y-1 font-semibold">panels</p>
            </div>
        </Card>
    </div>
</div>

@code {
    private int solarScore = -1;
    private int dayLightHours = -1;
    private string SystemSize = "5kw";
    private int PanelCount = 8;

    protected override async Task OnInitializedAsync()
    {
        var ss = await ProtectedSessionStore.GetAsync<int>("solarScore");
        if (ss.Success)
        {
            solarScore = ss.Value;
        }
        var dlh = await ProtectedSessionStore.GetAsync<BasicCalculation>("basicCalculation");
        if (dlh.Success)
        {
            BasicCalculation bc = dlh.Value;
            dayLightHours = bc.daylightHours;
        }
    }

     private void SetPanelCount(int count) {
        PanelCount = count;
    }

    private void SetSystemSize(string size)
    {
        SystemSize = size;
        switch (size)
        {
            case "5kw":
                SetPanelCount(8);
                break;
            case "8kw":
                SetPanelCount(14);
                break;
            case "12kw":
                SetPanelCount(20);
                break;
            default:
                SetPanelCount(8);
                break;
        }
    }
}
