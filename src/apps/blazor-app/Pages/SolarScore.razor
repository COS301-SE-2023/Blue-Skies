@page "/solarscore"
@layout MainLayout
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage ProtectedLocalStore;
@inject ProtectedSessionStorage ProtectedSessionStore;
@inject NavigationManager NavigationManager;
@using System.Text.Json;
@using BlazorApp.Components.Hero;

<PageTitle>Solar Score</PageTitle>

<div class="fade-in-enter-active">
@if (!isLoaded) {}
else if (isAd) {
    NavigationManager.NavigateTo("/admin/keys");
} else {      
<div class="w-full">
    @if (solarScore != 0)
    {
    <div class="mb-20"><BlazorApp.Section.Results systems="systems"/></div>
    } else {
        <EnterLocation parent="parent"/>
    }
    <div class="mt-40 mb-20"><BlazorApp.Section.ScoreInfo/></div>
    <div class="mt-32 mb-10"><BlazorApp.Section.NextSteps/></div>
</div>
}
</div>


@code {
    public string parent = "solarscore";
    private bool isAd = false;
    private bool isLoaded = false;
    private int solarScore = 0;
    private List<SystemModel> systems = new List<SystemModel>();
    private string? API_PORT = Environment.GetEnvironmentVariable("API_PORT");
    protected override async Task OnInitializedAsync()
    {
        var selected = await ProtectedLocalStore.GetAsync<bool>("SelectedAddress");
        var isAdmin = await ProtectedLocalStore.GetAsync<bool>("isAdmin");
        var score = await ProtectedSessionStore.GetAsync<int>("solarScore");

        solarScore = score.Value;
        isAd = isAdmin.Value;
        await GetSystems();
        isLoaded = true;
    }

    private async Task GetSystems()
    {
        var client = new HttpClient();
        var request = new HttpRequestMessage(HttpMethod.Get, API_PORT + "/System/all");
        var response = await client.SendAsync(request);
        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            var data = await response.Content.ReadAsStringAsync();
            systems = JsonSerializer.Deserialize<List<SystemModel>>(data, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                })!;
        }
        else
        {
            Console.WriteLine("Failed");
        }
        return;
    }
   
}