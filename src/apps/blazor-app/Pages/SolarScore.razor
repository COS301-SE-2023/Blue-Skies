@page "/solarscore"
@layout MainLayout
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage ProtectedLocalStore;
@inject ProtectedSessionStorage ProtectedSessionStore;
@inject NavigationManager NavigationManager;
@inject BlazorApp.Data.LoadingService loadingService
@using System.Text.Json;
@using BlazorApp.Components.Home;
@using BlazorApp.Section;

<PageTitle>Solar Score</PageTitle>


@if (isAd)
{
    loadingService.ShowLoadingScreen();
    NavigationManager.NavigateTo("/admin/keys");
}
else
{
    <div class="fade-in-enter-active">
        <div class="w-full">
            @if (lat != null && lng != null)
            {
                <div class="mb-20">
                    <BlazorApp.Section.Results />
                </div>
                <a href="/advanced" @onclick="() => loadingService.ShowLoadingScreen()" class="text-sm font-normal leading-6 text-orange-accent-500">Advanced Calculation<span
                        aria-hidden="true"></span></a>
            }
            else
            {
                <EnterLocation />
            }
            <div class="mt-40 mb-20">
                <BlazorApp.Section.ScoreInfo />
            </div>
            <div class="mt-32 mb-10">
                <BlazorApp.Section.NextSteps />
            </div>
        </div>
    </div>
}


@code {
    private bool isAd = false;
    private double? lat;
    private double? lng;
    private string? API_PORT = Environment.GetEnvironmentVariable("API_PORT");

    protected override async Task OnInitializedAsync()
    {
        var isAdmin = await ProtectedLocalStore.GetAsync<bool>("isAdmin");
        var locationData = await ProtectedSessionStore.GetAsync<LocationDataModel>("currentLocationData");
        await ProtectedSessionStore.SetAsync("parent", "solarScore");
        Console.WriteLine(locationData.Value);
        if(locationData.Value != null) {
            lat = locationData.Value.latitude;
            lng = locationData.Value.longitude;
        }
        isAd = isAdmin.Value;
    }
}