@page "/solarscore"
@* @layout MainLayout *@
@inject ProtectedLocalStorage ProtectedLocalStore;
@inject ProtectedSessionStorage ProtectedSessionStore;
@inject NavigationManager NavigationManager;
@inject BlazorApp.Data.LoadingService loadingService
@using System.Text.Json;
@using BlazorApp.Components.Home;
@using BlazorApp.Components.SolarScore;

<PageTitle>Solar Score</PageTitle>

@* Check for admin *@
@if (isAd)
{
    loadingService.ShowLoadingScreen();
    NavigationManager.NavigateTo("/admin/keys");
}
else
{
    <div class="fade-in-enter-active">
        <div class="w-full">
            @if (latitude != 0 && longitude != 0)
            {
                <div class="mb-20">
                    <Results latitude="latitude" longitude="longitude"/>
                </div>
                <div class="-mb-80">
                    <Image ImageName="shapes.svg" css="absolute -top-10 -translate-y-28 md:-translate-y-0  -z-10 -left-1/2  mw-2/3 -translate-y-28  md:-translate-y-0 scale-[2] md:scale-100 w-2/3 h-2/3" alt="Shapes"/>
                    <Image ImageName="Robert_Sitting_On_Panel.png" css="-z-10 ml-20 mt-60  robert-slide-up h-52 md:h-72" alt="Rob"/>
                </div>
            }
            else
            {
                <EnterLocation />
            }
            <div class=" mb-20">
                <ScoreInfo />
            </div>
            <div class="mt-32 mb-10">
                <NextSteps />
            </div>
        </div>
    </div>
}


@code {
    private bool isAd = false;
    private double latitude = 0;
    private double longitude = 0;
    private string? API_PORT = Environment.GetEnvironmentVariable("API_PORT");

    /// <summary>
    /// On page load, check if user is admin.
    /// Get current location data from session storage.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        var isAdmin = await ProtectedLocalStore.GetAsync<bool>("isAdmin");
        @* var locationData = await ProtectedSessionStore.GetAsync<LocationDataModel>("currentLocationData"); *@
        var lat = await ProtectedSessionStore.GetAsync<double>("latitude");
        latitude = lat.Value;
        var lng = await ProtectedSessionStore.GetAsync<double>("longitude");
        longitude = lng.Value;
        Console.WriteLine("Latitude: " + latitude);
        Console.WriteLine("Longitude: " + longitude);
        await ProtectedSessionStore.SetAsync("parent", "solarScore");
        isAd = isAdmin.Value;
        if (latitude == 0 && longitude == 0){
            loadingService.HideLoadingScreen();
        }
    }
}