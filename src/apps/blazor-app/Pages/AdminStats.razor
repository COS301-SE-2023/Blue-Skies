@page "/admin/stats"
@layout AdminLayout
@using ChartJs.Blazor.PieChart
@using BlazorApp.Components.Base
@using BlazorApp.Models
@using System.Text.Json;

<PageTitle>Blue Skies - Stats</PageTitle>

<div class="mt-2 ">
    <div class="flex w-full justify-between p-4">
        <div class="">
            <Heading >
                <Superscript>
                    <h2>Website</h2>
                </Superscript>
                <Header>
                    <h1>Statistics</h1>
                </Header>
            </Heading>
        </div>
        
    </div>
    
    <div class="flex">
            <Chart Height="90" Config="pieConfig"></Chart>

        <Chart Height="90" Config="pieConfig"></Chart>
    </div>
</div>

@code {
    private PieConfig? pieConfig;
    private List<UserModel> users = new List<UserModel>();

    protected override void OnInitialized()
    {
        pieConfig = new PieConfig
        {
            Options = new PieOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Active Users"
                }
            }
        };

        foreach (string color in new[] { "Red", "Yellow", "Green", "Blue" })
        {
            pieConfig.Data.Labels.Add(color);
        }

        PieDataset<int> dataset = new PieDataset<int>(new[] { 6, 5, 3, 7 })
        {
            BackgroundColor = new[]
            {
                ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
                ColorUtil.ColorHexString(255, 205, 86), // Slice 2 aka "Yellow"
                ColorUtil.ColorHexString(75, 192, 192), // Slice 3 aka "Green"
                ColorUtil.ColorHexString(54, 162, 235), // Slice 4 aka "Blue"
            }
        };
        pieConfig.Data.Datasets.Add(dataset);

    }

    protected override async Task OnInitializedAsync()
    {
        await GetUsers();
    }
    private async Task GetUsers(){
        var client = new HttpClient();
        var request = new HttpRequestMessage(HttpMethod.Get, "http://localhost:5096/user/all");
        var response = await client.SendAsync(request);
        if(response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            var data = await response.Content.ReadAsStringAsync();
            users = JsonSerializer.Deserialize<List<UserModel>>(data, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        }
        else
        {
            Console.WriteLine("Failed");
        }
    }
}