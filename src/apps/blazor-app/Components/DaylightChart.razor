@using ChartJs.Blazor.PieChart

<Chart Config="pieConfig"></Chart>

@code {
    private PieConfig pieConfig = new PieConfig();
    [Parameter]
    public float hours { get; set; } = 10;
    [Parameter]
    public float daylightHours { get; set; } = 12;

    public DaylightChart() {}

    public DaylightChart(float hours, float daylightHours)
    {
        this.hours = hours;
        this.daylightHours = daylightHours;
    }

    public void SetHours(float hours) {
        this.hours = hours;
        UpdateDataset();
    }

    public void SetDaylightHours(float daylightHours) {
        this.daylightHours = daylightHours;
        UpdateDataset();
    }
    
    protected override void OnParametersSet()
    {
        pieConfig = new PieConfig(true)
            {
                Options = new PieOptions
                {
                    Responsive = true,
                    AspectRatio = 3,
                    Legend = new Legend
                    {
                        Display = false,
                    },
                    Title = new OptionsTitle
                    {
                        Display = false,
                        Text = "Running Hours",
                        FontSize = 20,
                        Position = Position.Bottom,
                        LineHeight = 4,
                    },
                    Circumference = 3,
                    Rotation = -9.341,
                    Animation = new ArcAnimation
                    {
                        AnimateRotate = true,
                        Duration = 2000,

                    },
                    Tooltips = new Tooltips
                    {
                        Enabled = true,
                        Mode = InteractionMode.Index,
                        Intersect = false,
                    },
                    Hover = new Hover
                    {
                        Mode = InteractionMode.Index,
                        Intersect = false
                    },
                    CutoutPercentage = 80
                }
            };  
        UpdateDataset();
    }

    protected override void OnInitialized()
    {
        UpdateDataset();
    }

    public void UpdateDataset() {
        pieConfig.Data.Datasets.Clear();

        foreach (string color in new[] { "Runnable Hours", "Remaining" })
        {
            pieConfig.Data.Labels.Add(color);
        }
        float remaining = (24-daylightHours) - hours;
        Console.WriteLine(hours + " hours");
        PieDataset<float> pieDataset = new PieDataset<float>(new[] { hours, remaining, })
            {
                BackgroundColor = new[] {
                    ColorUtil.ColorHexString(56,113,193),
                    ColorUtil.ColorHexString(156,163,175),
                },
            };
        if (pieConfig != null)
        {
            pieConfig.Data.Datasets.Add(pieDataset);
        } 
    }
} 