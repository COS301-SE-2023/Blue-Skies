@using BlazorApp.Components.Base
@using BlazorApp.Components.Dashboard
@using BlazorApp.Models
@using System.Text.Json;
@inject ProtectedSessionStorage ProtectedSessionStore
@inject ProtectedLocalStorage ProtectedLocalStore
@inject NavigationManager NavigationManager
@inject BlazorApp.Data.ToastService toastService
@inject BlazorApp.Data.TooltipService tooltipService


<div class="mt-24 text-center">
    <Heading>
        <Header>
            <h1 class="text-3xl">Your results in numbers</h1>
        </Header>
        <Subscript>
            <p class="text-primary-700 mt-2">The following numbers are based on your location.</p>
        </Subscript>
    </Heading>
</div>
<div class="flex w-full flex-nowrap gap-4 flex-row justify-center mt-4 md:mt-20">
    @* Map Container *@
    <div class="relative sm:flex-shrink-0 gap-5 items-center flex flex-col justify-center w-full max-w-lg">
        <Image ImageName="Robert_Welcoming.png" css="absolute left-20 z-0 h-28 top-10" alt="Rob" />
        @if (satteliteImage != null)
        {
            <Map css="scale-90 z-10" ImageName="@satteliteImage" />
        }
        else
        {
            <div class="z-10 flex items-center justify-center w-[360px] h-[360px] bg-gray-300 rounded">
                <svg class="animate-pulse w-10 h-10 text-gray-200 dark:text-gray-600" aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                    <path
                        d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                </svg>
            </div>
        }
        @if (locationData != null)
        {
            <LocationItem Title="Address" ImageName="Point On Map.svg" Text="@locationData!.locationName" />
            <Button style="pill">
                <content>
                    <div class="flex gap-4 px-3 py-1" @onclick="ShowModalCalculation">
                        <p class="my-auto">More Calculations </p>
                        <Image css="w-8 h-8" ImageName="ArrowRight.svg" alt="Arrow" />
                    </div>
                </content>
            </Button>
        }
        else
        {
            <div role="status"
                class="animate-pulse md:space-y-0 md:space-x-8 md:flex md:items-center w-[470px] max-w-[470px]">
                <svg class="w-10 h-10 text-gray-200 aria-hidden=" true" xmlns="http://www.w3.org/2000/svg"
                    fill="currentColor" viewBox="0 0 20 18">
                    <path
                        d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                </svg>
                <div class="w-full">
                    <div class="h-4 bg-gray-200 rounded-full dark:bg-gray-700 w-24 mb-3 mt-3"></div>
                    <div class="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-[360px] mb-2"></div>
                    <div class="h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-24 mb-2"></div>
                </div>
                <span class="sr-only">Loading...</span>
            </div>
            <div class="w-full animate-pulse">
                <div class="h-14 bg-gray-200 rounded-full dark:bg-gray-700 w-72 mx-auto"></div>
            </div>
        }
    </div>
    <div class="relative w-3/5 flex flex-col sm:flex-shrink-0 gap-5 ">
        <Image ImageName="Robert_Pointing_Down.png" css="absolute right-24 -top-16 z-0 h-32" alt="Rob" />
        <Card
            css="relative border-2 scale-90 flex flex-col gap-2 xl:scale-100 border-primary-300 p-4 w-full h-fit my-auto z-10">
            @if (solarScore == -1)
            {
                <div role="status" class="animate-pulse md:space-y-0 md:space-x-8 md:flex md:items-center">
                    <div class="z-10 flex items-center justify-center w-16 h-16 bg-gray-300 rounded-md ">
                        <svg class="w-10 h-10 text-gray-200 aria-hidden=" true" xmlns="http://www.w3.org/2000/svg"
                            fill="currentColor" viewBox="0 0 20 18">
                            <path
                                d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                        </svg>
                    </div>
                    <div class="w-full">
                        <div class="h-8 bg-gray-200 rounded-full dark:bg-gray-700 w-28 mb-3 mt-3"></div>
                    </div>
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="w-full animate-pulse">
                    <div class="h-16 bg-gray-200 rounded-full dark:bg-gray-700 w-28 mt-2"></div>
                </div>
                <div class="flex gap-2 justify-end absolute top-3 right-5">
                    <div class="flex gap-3 justify-end items-end flex-col">
                        <div class="h-3 bg-gray-200 rounded-full dark:bg-gray-700 w-[660px] mt-1.5 animate-pulse"></div>
                        <div
                            class="bg-gradient-to-r p-4 max-w-md flex gap-2 h-fit from-primary-400 to-primary-300 shadow w-full my-auto rounded-2xl">
                            <div class="w-full h-full flex gap-2 justify-center items-center my-auto rounded-2xl">
                                <div class="h-8 bg-gray-200 rounded-full dark:bg-gray-700 w-52 mt-1.5 animate-pulse"></div>
                            </div>
                            <div
                                class="w-1/2 h-full flex gap-2 justify-center p-3 my-auto bg-white items-center rounded-2xl">
                                <div class="h-8 bg-gray-200 rounded-full dark:bg-gray-700 w-28 mt-1.5 animate-pulse "></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="h-3 bg-gray-200 rounded-full dark:bg-gray-700 w-full mt-1.5 animate-pulse"></div>
            }
            else
            {
                <div class="my-auto w-full flex gap-4 relative has-tooltip">
                    <Tooltip>
                        <p>@tooltipService.GetTooltip("solarScore")</p>
                    </Tooltip>
                    <div class="bg-gray-100 shadow-md rounded-3xl p-3 w-16 ">
                        <Image ImageName="Sale.svg" alt="Sale" css="scale-150" />
                    </div>
                    <h1 class="text-xl text-primary-800 font-semibold mt-3">Solar Score</h1>
                </div>
                <div class="flex gap-1 mt-3">
                    <p class="text-5xl text-primary-900 font-semibold">@solarScore</p>
                    <p class="text-5xl text-gray-400 font-bold">%</p>
                </div>
                <div class="flex gap-2 justify-end absolute top-3 right-5">
                    <div class="flex gap-3 justify-end items-end flex-col">
                        <div class="flex gap-2">
                            <p class="text-primary-800">Savings Calculations Based on an Average Bill of R4500,</p>
                            <p class="text-orange-accent-600 hover:text-primary-500 cursor-pointer"
                            @onclick="ShowModalCalculation">Calculate with Own Bill â†’</p>
                        </div>
                        <div
                            class="bg-gradient-to-r p-4 max-w-md flex gap-2 h-fit from-primary-400 to-primary-300 shadow w-full my-auto rounded-2xl">
                            <div class="w-full h-full flex gap-2 justify-center items-center my-auto rounded-2xl">
                                <p class="text-center text-xl font-bold text-primary-100">Potential</p>
                                <p class="text-center text-xl font-bold text-primary-200">Savings</p>
                            </div>
                            <div
                                class="w-1/2 h-full flex gap-2 justify-center p-3 my-auto bg-white items-center rounded-2xl">
                                <p class="text-center text-xl font-bold">R </p>
                                @{
                                    var savings = Math.Round(avgEnergyProduction * 2.5 * 30, 0);
                                }
                                <p class="text-center text-xl font-bold">@savings</p>
                                <p class="text-center text-gray-400 text-xl font-bold">p/m </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div
                    class="w-full relative h-3 mt-3 rounded-full bg-gradient-to-r from-red-accent-500 via-yellow-accent-500 to-green-500">
                    @{
                        var percentage = solarScore + "%";
                    }
                    <div style="left: @percentage"
                        class="h-6 w-2 rounded-full bg-primary-600 absolute top-1/2 -translate-y-1/2 transition-all duration-900 ">
                    </div>
                </div>
            }
        </Card>
        <Image ImageName="Robert_T_Pose.png" css="absolute left-40 top-[215px] z-0 h-32" alt="Rob" />
        <Card
            css="relative border-2 scale-90 flex flex-col gap-2 xl:scale-100 border-primary-300 p-4 w-full h-fit my-auto z-10">
            @if (locationData == null)
            {
                <div role="status" class="animate-pulse md:space-y-0 md:space-x-8 md:flex md:items-center">
                    <div class="z-10 flex items-center justify-center w-16 h-16 bg-gray-300 rounded-md ">
                        <svg class="w-10 h-10 text-gray-200 aria-hidden=" true" xmlns="http://www.w3.org/2000/svg"
                            fill="currentColor" viewBox="0 0 20 18">
                            <path
                                d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                        </svg>
                    </div>
                    <div class="w-full">
                        <div class="h-8 bg-gray-200 rounded-full dark:bg-gray-700 w-56 mb-3 mt-3"></div>
                    </div>
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="flex gap-4 mt-4">
                    <div class="grid scale-90 grid-cols-2 gap-1.5 w-full">
                        <div class="justify-center">
                            <div
                                class="flex bg-gray-100 shadow-md rounded-3xl mx-auto my-auto p-2 w-[80px] h-[80px] animate-pulse items-center justify-center">
                                <svg class="w-12 h-12 text-gray-200 dark:text-gray-600" aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                    <path
                                        d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                </svg>
                            </div>
                            <div role="status" class="max-w-sm animate-pulse mt-3">
                                <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 w-[100px] mx-auto"></div>
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div class="justify-center">
                            <div
                                class="flex bg-gray-100 shadow-md rounded-3xl mx-auto my-auto p-2 w-[80px] h-[80px] animate-pulse items-center justify-center">
                                <svg class="w-12 h-12 text-gray-200 dark:text-gray-600" aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                    <path
                                        d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                </svg>
                            </div>
                            <div role="status" class="max-w-sm animate-pulse mt-3">
                                <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 w-[100px] mx-auto"></div>
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div class="justify-center">
                            <div
                                class="flex bg-gray-100 shadow-md rounded-3xl mx-auto my-auto p-2 w-[80px] h-[80px] animate-pulse items-center justify-center">
                                <svg class="w-12 h-12 text-gray-200 dark:text-gray-600" aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                    <path
                                        d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                </svg>
                            </div>
                            <div role="status" class="max-w-sm animate-pulse mt-3">
                                <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 w-[100px] mx-auto"></div>
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div class="justify-center">
                            <div
                                class="flex bg-gray-100 shadow-md rounded-3xl mx-auto my-auto p-2 w-[80px] h-[80px] animate-pulse items-center justify-center">
                                <svg class="w-12 h-12 text-gray-200 dark:text-gray-600" aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                    <path
                                        d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                </svg>
                            </div>
                            <div role="status" class="max-w-sm animate-pulse mt-3">
                                <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 w-[100px] mx-auto"></div>
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                    <div class="flex flex-col justify-center w-full items-center gap-5">
                        <div class="flex flex-col gap-1 animate-pulse justify-center items-center">
                            <div class="h-6 bg-gray-200 rounded-full dark:bg-gray-700 w-48 mt-2"></div>
                            <div class="flex mt-3">
                                <div class="h-12 bg-gray-200 rounded-full dark:bg-gray-700 w-52 mt-1"></div>
                            </div>
                        </div>
                        <DaylightChart hours="0" daylightHours="0" />
                        <div class="flex w-full justify-center items-center -mt-10 animate-pulse">
                            <div class="h-12 bg-gray-200 rounded-full dark:bg-gray-700 w-44"></div>
                        </div>
                        <div class="h-6 bg-gray-200 rounded-full dark:bg-gray-700 w-60 -mt-8 animate-pulse"></div>
                    </div>
                    <div class="flex flex-col w-full -mt-20 justify-center items-center gap-4">
                        <div class="-mt-10 mb-5 w-full flex flex-col">
                            <div class="justify-center">
                                <div
                                    class="flex bg-gray-100 shadow-md rounded-3xl mx-auto w-[80px] h-[80px] animate-pulse items-center justify-center">
                                    <svg class="w-14 h-14 text-gray-200 dark:text-gray-600" aria-hidden="true"
                                        xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                        <path
                                            d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                    </svg>
                                </div>
                                <div role="status" class="max-w-sm animate-pulse mt-3">
                                    <div class="h-3 bg-gray-200 rounded-full dark:bg-gray-700 w-[120px] mb-2 mx-auto"></div>
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <div
                                class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 w-[325px] mb-2.5 mx-auto animate-pulse">
                            </div>
                        </div>
                        <div class="justify-start items-start -mt-10">
                            <div class="flex">
                                <div class="flex flex-col gap-2 justify-center items-center w-full">
                                    <div
                                        class="flex bg-gray-100 shadow-md rounded-3xl mx-auto w-[80px] h-[120px] animate-pulse items-center justify-center">
                                        <svg class="self-center w-14 h-14 text-gray-200 dark:text-gray-600"
                                            aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                            viewBox="0 0 20 18">
                                            <path
                                                d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                        </svg>
                                    </div>
                                    <div role="status" class="max-w-sm animate-pulse mt-3">
                                        <div class="h-3 bg-gray-200 rounded-full dark:bg-gray-700 w-[140px] mb-2.5"></div>
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                                <div class="mx-auto">
                                    <div
                                        class="flex bg-gray-100 shadow-md rounded-3xl mx-auto w-[80px] h-[80px] animate-pulse items-center justify-center">
                                        <svg class="w-14 h-14 text-gray-200 dark:text-gray-600" aria-hidden="true"
                                            xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                            <path
                                                d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
                                        </svg>
                                    </div>
                                    <div role="status" class="max-w-sm animate-pulse mt-3">
                                        <div class="h-3 bg-gray-200 rounded-full dark:bg-gray-700 w-[110px] mb-2.5 mx-auto">
                                        </div>
                                        <div class="h-3 bg-gray-200 rounded-full dark:bg-gray-700 w-[80px] mb-2 mx-auto">
                                        </div>
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                            </div>
                            <div class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 w-[325px] mt-2.5 animate-pulse"></div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="my-auto w-full flex gap-4 relative">
                    <div class="bg-gray-100 shadow-md rounded-3xl p-3 w-16 ">
                        <Image ImageName="Accumulator.svg" alt="Sale" css="scale-150" />
                    </div>
                    <h1 class="text-xl text-primary-800 font-semibold mt-3">Potential Solar System with given appliances</h1>
                </div>
                <div class="flex gap-4 mt-4">
                    <div class="grid scale-90 grid-cols-2 gap-2 w-full">
                        <Appliance name="Fridge" imageName="Fridge.svg" count="numFridges" />
                        <Appliance name="TV" imageName="TV.svg" count="numTVs" />
                        <Appliance name="Computer" imageName="Computer.svg" count="numComputers" />
                        <div class="flex mx-auto has-tooltip" @onclick="showModalAppliancesPopup">
                            <Tooltip>
                                <p>@tooltipService.GetTooltip("solar score add button")</p>
                            </Tooltip>
                            <Appliance css="transition-all duration-300 hover:-translate-y-1 hover:shadow" name="Add"
                                imageName="AddSquare.svg" />
                        </div>
                    </div>
                    <div class="flex flex-col justify-center w-full items-center gap-5">
                        <div class="flex flex-col gap-1 has-tooltip">
                            <Tooltip pointer="15">
                                <p>@tooltipService.GetTooltip("average energy produced")</p>
                            </Tooltip>
                            <h3 class="font-medium text-lg text-primary-900 text-left">Avg Energy Produced</h3>
                            <div class="flex gap-1 mt-3">
                                @{
                                    avgEnergyProduction = Math.Round(solarCalculator.getAnnualKwGenerated(numOfPanels,
                                    locationData.solarPanelsData) / 365, 2);
                                }
                                <p class="text-5xl text-primary-900 font-semibold">@avgEnergyProduction</p>
                                <p class="text-5xl text-gray-400 font-bold">kwh</p>
                            </div>
                        </div>
                        <DaylightChart hours="@dlh" daylightHours="@daylight" fullDay="true" />
                        <div class="flex flex-col w-full justify-center items-center gap-10 -mt-24 has-tooltip">
                            <div class="translate-y-10 w-full">
                                <Tooltip pointer="45">
                                    <p>@tooltipService.GetTooltip("running hours on batteries")</p>
                                </Tooltip>
                            </div>
                            <div class="flex flex-row gap-1">
                                @{
                                    if (dlh == daylight)
                                    {
                                        <p class="text-5xl text-primary-900 font-semibold">@dlh+</p>
                                    }
                                    else
                                    {
                                        <p class="text-5xl text-primary-900 font-semibold">@dlh</p>
                                    }
                                }
                                <p class="text-5xl text-gray-400 font-bold">h</p>
                            </div>
                            <h3 class="font-medium text-lg -mt-10 text-primary-900 text-left">Running Hours on Batteries
                            </h3>
                        </div>
                    </div>
                        <div class="flex flex-col w-full justify-center items-center gap-4 -mt-10">
                            <div class="-mt-10 mb-2 w-full flex flex-col">
                                <Appliance css="scale-90" imageName="SolarPanels.svg" name="Number of Panels"
                                    count="@numOfPanels" />
                                <input type="range" class="accent-primary-800  cursor-pointer w-full mt-3" min="4" max="20"
                                    step="1" @bind-value="@numOfPanels" @oninput="SetChargingLimit" />
                            </div>
                            <div class="flex gap-2 pr-2 justify-start items-start has-tooltip">
                                 <Tooltip pointer="27">
                                    <p>@tooltipService.GetTooltip("battery utilisation")</p>
                                </Tooltip>
                                <div class="flex flex-col gap-2 justify-center items-center w-full">
                                    <div
                                        class="h-28 shadow flex-col-reverse flex w-20 p-1 bg-gray-300 relative  rounded-lg">
                                        @{
                                            var percentage = chargingLimitPercentage + "%";
                                        }
                                        <div style="height: @percentage"
                                            class='w-full transition-all rounded-lg @(chargingLimitPercentage > 0 && chargingLimitPercentage < 25 ? "bg-red-accent-500" : chargingLimitPercentage > 25 && chargingLimitPercentage < 50 ? "bg-yellow-accent-500" : chargingLimitPercentage > 50 && chargingLimitPercentage < 75 ? "bg-primary-500" : "bg-primary-800")'>
                                        </div>
                                        <p
                                            class='absolute bottom-2 left-1/2 -translate-x-1/2 @(chargingLimitPercentage > 75 ? "text-primary-400" : chargingLimitPercentage < 25 ? "text-primary-100" : "text-primary-900") font-bold text-md'>
                                            @chargingLimitPercentage<span
                                                class='@(chargingLimitPercentage > 75 ? "text-primary-300" : chargingLimitPercentage < 25 ? "text-primary-300" :"text-primary-700")'>%</span>
                                        </p>
                                        <div
                                            class="w-8 h-4 -z-10 bg-gray-300 rounded-md absolute -top-2 left-1/2 -translate-x-1/2">
                                        </div>
                                    </div>
                                    <p class="text-center">Battery Utilization</p>
                                </div>
                                <Appliance css="scale-90" ImageName="Batteries.svg" name="Number of Batteries"
                                    count="@numOfBatteries" />
                            </div>
                            <input type="range" class="accent-primary-800  cursor-pointer w-full " min="1" max="6" step="1"
                            @bind-value="@numOfBatteries" @oninput="SetRunningHours" />
                        </div>
                </div>
            }
        </Card>
    </div>
</div>
<ModalPopup @ref="ModalPopupLogIn" Title="Log in to access this feature">
    <p class="max-w-md">To provide you with a personalized experience and save your input data for enhanced
        calculations,
        please log in to our website. Your login helps us tailor our services to your specific needs.</p>
    <div class="flex flex-row gap-4 justify-center">
        <div @onclick="NavigateToLogin">
            <Button style="pill">
                <content>
                    Log in
                </content>
            </Button>
        </div>
        <div @onclick="ModalPopupLogIn.Dismiss">
            <Button style="outline">
                <content>Cancel</content>
            </Button>
        </div>
    </div>
</ModalPopup>
<ModalPopup @ref="ModalPopupAppliances" Title="Continue with adding appliances?">
    <p class="max-w-md">You can add or remove appliances to get more accurate power usages for your location by
        continuing.
        Do you want to continue?
    </p>
    <div class="flex flex-row gap-4 justify-center">
        <div @onclick="NavigateToAdnavced">
            <Button style="pill">
                <content>
                    Continue
                </content>
            </Button>
        </div>
        <div @onclick="ModalPopupAppliances.Dismiss">
            <Button style="outline">
                <content>Cancel</content>
            </Button>
        </div>
    </div>
</ModalPopup>

@code {
    private DataHandlers.SystemsDataHandler systemsDataHandler = new DataHandlers.SystemsDataHandler();
    private DataHandlers.SolarDataHandler solarCalculator = new DataHandlers.SolarDataHandler();
    private DataHandlers.RooftopDataHandler rooftopDataHandler = new DataHandlers.RooftopDataHandler();
    private SharedUtils.systemClass systemClass = new SharedUtils.systemClass();
    [Parameter]
    public LocationDataModel? locationData { get; set; } = null;
    ModalPopup ModalPopupLogIn { get; set; } = new ModalPopup();
    ModalPopup ModalPopupAppliances { get; set; } = new ModalPopup();
    private int solarScore = -1;
    public double avgEnergyProduction = 0.0;
    public string? satteliteImage;
    public int numOfPanels = 8;
    public int numOfBatteries = 3;
    public double appliancePowerUsage = 0.0;
    public int numFridges = 2;
    public int numTVs = 2;
    public int numComputers = 3;
    float dlh = 0f;
    private int daylight = 24;
    private double chargingLimit = 0.0;
    private double chargingLimitPercentage = 50.0;

    protected override void OnParametersSet()
    {
        if (locationData != null)
        {
            satteliteImage = rooftopDataHandler.GetSatelliteImage(locationData!.satteliteImageData!);
            solarScore = solarCalculator.getSolarScore(locationData.solarPanelsData);
            avgEnergyProduction = Math.Round(solarCalculator.getAnnualKwGenerated(numOfPanels, locationData!.solarPanelsData) / 365,
            2);
            SetGraphicValues();
        }
    }

    private void SetChargingLimit(ChangeEventArgs? e = null)
    {
        if (e != null)
        {
            var val = e.Value!.ToString();
            numOfPanels = int.Parse(val!);
        }
        SetGraphicValues();

    }
    private void SetRunningHours(ChangeEventArgs? e = null)
    {
        if (e != null)
        {
            var val = e.Value!.ToString();
            numOfBatteries = int.Parse(val!);
        }
        SetGraphicValues();
    }

    private void SetGraphicValues()
    {
        appliancePowerUsage = ((numFridges * 250) + (numTVs * 70) + (numComputers * 400)) / 1000.0;
        var avgEnergyProduction = solarCalculator.getAnnualKwGenerated(numOfPanels, locationData!.solarPanelsData, true) / 365;
        var usableHours = solarCalculator.getSunlightHours(locationData.solarPanelsData, true);
        usableHours = Math.Round(usableHours, 2);
        chargingLimit = (avgEnergyProduction - appliancePowerUsage) * usableHours;
        if (chargingLimit > numOfBatteries * 10)
        {
            chargingLimit = numOfBatteries * 10;
            chargingLimitPercentage = 100;
        }
        else
        {
            chargingLimitPercentage = (chargingLimit / (numOfBatteries * 10)) * 100;
        }
        chargingLimitPercentage = Math.Round(chargingLimitPercentage, 2);

        double runningHours = chargingLimit / appliancePowerUsage;
        double runningHoursPercentage = (runningHours / daylight) * 100;
        if (runningHoursPercentage > 100)
        {
            runningHoursPercentage = 100;
        }
        dlh = (float)Math.Round(daylight * (runningHoursPercentage / 100), 2);
    }

    private async void ShowModalCalculation()
    {
        var logIn = await ProtectedLocalStore.GetAsync<bool>("loggedIn");
        bool isLoggedIn = logIn.Value;
        if (isLoggedIn)
        {
            NavigationManager.NavigateTo("/advanced");
        }
        else
        {
            ModalPopupLogIn.Show();
        }
    }

    private void showModalAppliancesPopup()
    {
        ModalPopupAppliances.Show();
    }
    private void NavigateToLogin()
    {
        ModalPopupLogIn.Dismiss();
        NavigationManager.NavigateTo("/Login");
    }
    private void NavigateToAdnavced()
    {
        ModalPopupAppliances.Dismiss();
        NavigationManager.NavigateTo("/advanced");
    }
}