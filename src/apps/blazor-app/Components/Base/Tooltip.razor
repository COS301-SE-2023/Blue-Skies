@inject IJSRuntime JSRuntime
<div class='absolute mx-auto tooltip transition-all duration-300 delay-500 rounded-xl shadow-lg px-3 py-2 bg-primary-900 text-primary-100 @direction'>
    <div @ref="divToMove" class="tooltip absolute bg-primary-900 z-40 -bottom-1 transition-all duration-100 rotate-45  w-3 h-3"></div>
    @ChildContent
</div>
@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }  
    [Parameter]
    public string? direction { get; set; } = "top";
    private ElementReference divToMove;

    // Register a JavaScript interop method
    private async Task InitializeMouseFollower()
    {
        await JSRuntime.InvokeVoidAsync("initializeMouseFollower", divToMove);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Call the JavaScript function to initialize the mouse follower
            await InitializeMouseFollower();
        }
    }

    protected override void OnParametersSet()
    {
        switch (direction)
        {
            case "top":
                direction = "-translate-y-full -mt-2";
                break;
            case "bottom":
                direction = "translate-y-full mt-2";
                break;
            case "left":
                direction = "-translate-x-full -ml-2";
                break;
            case "right":
                direction = "translate-x-full ml-2";
                break;
            default:
                direction = "-translate-y-full -mt-2";
                break;
        }
    }
}