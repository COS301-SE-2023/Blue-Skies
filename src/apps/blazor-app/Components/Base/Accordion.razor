@using BlazorApp.Models
@using BlazorApp.Components.Base

@{
    switch(style)
    {
      case "outline":
        <div class="grid grid-cols-1 gap-4">
            @foreach (AccordionItemModel item in items)
            {
                <div onclick="@(() => SetActive(item))" class="">
                    <AccordionItem item="@item" />
                </div>
            }
        </div>
        break;
      default:
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 max-w-7xl p-5 mx-auto">
            @foreach (AccordionItemModel item in items)
            {
                <div onclick="@(() => SetActive(item))" class="">
                    <AccordionItem item="@item"  />
                </div>
            }
        </div>
        break;
    }
}


@code {
    [Parameter]
    public int columns { get; set; } = 2;
    [Parameter]
    public string style { get; set; } = "";
    [Parameter]
    public List<AccordionItemModel> items { get; set; } = new List<AccordionItemModel>();
    
    private AccordionItemModel? selectedItem { get; set; }

    private void SetActive(AccordionItemModel item)
    {
        foreach (AccordionItemModel i in items)
        {
            if (i == item)
            {
                if (i.active)
                {
                    i.active = false;
                }
                else
                {
                    i.active = true;
                }
            }
            else
            {
                i.active = false;
            }
            StateHasChanged();
        }
    }
}