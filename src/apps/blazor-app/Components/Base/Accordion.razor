@using BlazorApp.Models
@using BlazorApp.Components.Base

@{
    switch(style)
    {
      case "outline":
        <div class="grid grid-cols-1 gap-4">
            @foreach (AccordionItemModel item in items)
            {
                <AccordionItem item="item" @OnClick="SetActive(item)" />
            }
        </div>
        break;
      default:
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 max-w-7xl p-5 mx-auto">
            @foreach (AccordionItemModel item in items)
            {
                <AccordionItem item="@item" />
            }
        </div>
        break;
    }
}


@code {
    [Parameter]
    public int columns { get; set; } = 2;
    [Parameter]
    public string style { get; set; } = "";
    [Parameter]
    public List<AccordionItemModel> items { get; set; } = new List<AccordionItemModel>();
    
    private AccordionItemModel? selectedItem { get; set; }

    private void SetActive(AccordionItemModel item)
    {
        Console.WriteLine("Accordion item Clicked:" + item.id + " - Accordion.razor, line 39");
        foreach (AccordionItemModel i in items)
        {
            if (i.id == item.id)
            {
                i.active = true;
            }
            else
            {
                i.active = false;
            }
        }
    }
}