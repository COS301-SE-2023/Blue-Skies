@using BlazorApp.Models
@using BlazorApp.Components.Base

@{
    switch(columns) {
        case 1:
            cols = "grid-cols-1";
            break;
        case 2:
            cols = "grid-cols-1 lg:grid-cols-2";
            break;
        case 3:
            cols = "grid-cols-1 lg:grid-cols-3";
            break;
        case 4:
            cols = "grid-cols-1 lg:grid-cols-4";
            break;
        default:
            cols = "grid-cols-1 lg:grid-cols-2";
            break;
    }

    <div class="@cols grid gap-4 max-w-7xl p-5 mx-auto">
        @foreach (AccordionItemModel item in items)
        {
            <div onclick="@(() => SetActive(item))" class="">
                <AccordionItem item="@item" style="@style" />
            </div>
        }
    </div>
}


@code {
    private string cols = "grid-cols-1 lg:grid-cols-2";
    [Parameter]
    public int columns { get; set; } = 2;
    [Parameter]
    public string style { get; set; } = "";
    [Parameter]
    public List<AccordionItemModel> items { get; set; } = new List<AccordionItemModel>();
    
    private AccordionItemModel? selectedItem { get; set; }

    private void SetActive(AccordionItemModel item)
    {
        foreach (AccordionItemModel i in items)
        {
            if (i == item)
            {
                if (i.active)
                {
                    i.active = false;
                }
                else
                {
                    i.active = true;
                }
            }
            else
            {
                i.active = false;
            }
            StateHasChanged();
        }
    }
}