@using BlazorApp.Data
@using BlazorApp.Components
@inject BlobStorageService blobStorageService

@if (!string.IsNullOrEmpty(ImageData))
{
    @if (hasPath)
    {
        @* <img class="@css" src="@($"data:image/svg+xml;utf8,{Uri.EscapeDataString(ImageData)}")" alt="@alt" /> *@
        <img class="@css" src="/assets/@ImageName" alt="@ImageName" />
    }
    else
    {
        @* <img class="@css" src="/assets/@ImageName" alt="@ImageName" /> *@
        <img class="@css rounded-md shadow" src="@($"data:image;base64,{ImageData}")" alt="@alt" />
    }
}
else
{
    <svg class="w-9 h-9 justify-center items-center animate-pulse text-gray-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
        fill="currentColor" viewBox="0 0 20 18">
        <path
            d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z" />
    </svg>
}

@code {
    [Parameter]
    public string? ImageName { get; set; }

    [Parameter]
    public string? css { get; set; }

    [Parameter]
    public string? alt { get; set; }

    private bool hasPath { get; set; }
    private string? ImageData { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        try
        {
            if (ImageName != null)
            {
                ImageData = ImageName;
                if (Path.Exists("wwwroot/assets/" + ImageName))
                {
                    hasPath = true;
                }
                else
                {
                    hasPath = false;
                }


                @* if (extension.Equals(".svg", StringComparison.OrdinalIgnoreCase))
{
IsSvgImage = true;
ImageData = await blobStorageService.GetSvgContent("assets", ImageName);
ImageData = ImageName;
}
else
{
IsSvgImage = false;
byte[] imageBytes = await blobStorageService.GetImageBytes("assets", ImageName);
ImageData = Convert.ToBase64String(imageBytes);
ImageData = ImageName;
}
*@

            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Image.razor: " + ex.Message);
        }
    }
    protected override void OnInitialized()
    {

    }
}
