@using BlazorApp.Components.Base
@inject ProtectedLocalStorage ProtectedLocalStore
@inject ProtectedSessionStorage ProtectedSessionStore
@using System.Text.Json
@using BlazorApp.Models


@namespace BlazorApp.FancyData

<div>
    <Heading css="mb-16 mt-16 max-w-3xl mx-auto">
        <Header>
            <h1 class="text-center">Fancy Data</h1>
        </Header>
        <Subscript>
            <p class="text-center">More information about your location</p>
        </Subscript>
    </Heading>
    <div class="w-full">
        <div class="w-fit mx-auto">
            <h1>Annual Flux Map</h1>
            <Image ImageName="@satteliteImageSrc" alt="sattelite Image" />
        </div>
        @if(monthlyFluxMap is not null){
            <div class="w-fit mx-auto">
                <h1>Monthly Flux Map</h1>
                <div class="grid grid-cols-3 gap-4">
                    @foreach(var item in monthlyFluxMap){
                        <Image ImageName="@item" alt="sattelite Image" css="h-26 w-26" />
                    }
                </div>
            </div>
        }
        else{
            <p>Monthly Flux Map is not available</p>
        }
    </div>

</div>

@code {
    [Parameter]
    public byte[]? monthlyFluxData { get; set; }

    [Parameter]
    public byte[]? maskData { get; set; }

    [Parameter]
    public string? elevationData { get; set; }

    [Parameter]
    public byte[]? satteliteImageData { get; set; }

    [Parameter]
    public byte[]? annualFluxData { get; set; }

    private DataHandlers.RooftopDataHandler rooftopDataHandler = new DataHandlers.RooftopDataHandler();
    private string? satteliteImageSrc = "";
    private string?[]? monthlyFluxMap = new string[12];

    @* OnInitialized *@
    protected override void OnInitialized()
    {   
       satteliteImageSrc = rooftopDataHandler.GetAnnualFluxMap(annualFluxData!, satteliteImageData!, maskData!);
       monthlyFluxMap = rooftopDataHandler.GetMonthlyFluxMap(monthlyFluxData!, satteliteImageData!, maskData!);
       
    }
} 
