@using BlazorApp.FancyData
@namespace BlazorApp.EnviromentImpact

<Card css="w-full gap-10 flex flex-col">
    <h1 class="text-primary-950 font-semibold text-start text-xl">Enviroment Impact Over 10 Years</h1>
    <div class="w-full grid grid-cols-2 gap-2">

        <div class="flex w-full gap-4">
            <Image ImageName="Bolt-Circle.svg" css="w-8 h-8" alt="Bolt"/>
            <p class="my-auto">@totalPowerSaved kW</p>
        </div>

        <div class="flex w-full gap-4">
            <Image ImageName="CO2.svg" css="w-8 h-8" alt="CO2"/>
            <p class="my-auto">@totalCO2Saved kg</p>
        </div>


        <div class="flex w-full gap-4">
            <Image ImageName="Waterdrops.svg" css="w-8 h-8" alt="Waterdrops"/>
            <p class="my-auto">@totalWaterSaved L</p>
        </div>

        <div class="flex w-full gap-4">
            <Image ImageName="Coal.svg" css="w-8 h-8" alt="Coal"/>
            <p class="my-auto">@totalCoalNotBurnt kg</p>
        </div>
        
        <div class="flex w-full gap-4">
            <Image ImageName="Tree.svg" css="w-8 h-8" alt="Tree"/>
            <p class="my-auto">@totalTreesPlanted</p>
        </div>

    </div>
</Card>

@code {

    [Parameter] public double? annualKWGenerated { get; set; }
    private DataHandlers.SolarDataHandler solarDataHandler = new DataHandlers.SolarDataHandler();
    private double totalPowerSaved = 0;
    private double totalCO2Saved = 0;
    private double totalWaterSaved = 0;
    private double totalCoalNotBurnt = 0;
    private double totalTreesPlanted = 0;

    protected override void OnParametersSet()
    {
        if (annualKWGenerated == null)
        {
            annualKWGenerated = 0;
        }
        totalPowerSaved = Math.Round(solarDataHandler.getPowerSaved((double)annualKWGenerated) * 1000, 2);
        totalCO2Saved = Math.Round(solarDataHandler.getCO2Saved((double)annualKWGenerated), 2);
        totalWaterSaved = Math.Round(solarDataHandler.waterSaved((double)annualKWGenerated), 2);
        totalCoalNotBurnt = Math.Round(solarDataHandler.coalNotBurnt((double)annualKWGenerated), 2);
        totalTreesPlanted = Math.Round(solarDataHandler.treesPlanted((double)annualKWGenerated), 2);
        StateHasChanged();

    }
}
