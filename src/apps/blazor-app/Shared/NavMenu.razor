@using BlazorApp.Components.Base
@inject IJSRuntime JSRuntime


<div class="fixed top-0 left-0 shadow-sm bg-white transition-all duration-300 delay-[250ms] w-full z-20 @(isScrollingDown ? "h-0" : "h-24") "></div>

<header class="fixed h-20 left-0 bg-transparent w-full z-20 transition-all duration-300 delay-[250ms] @(isScrollingDown ? "-top-20" : "top-0")">
  <nav class="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8" aria-label="Global">
    <div class="flex lg:flex-1">
      <a href="#" class="-m-1.5 p-1.5">
        <span class="sr-only">BLueSkies</span>
        <BlazorApp.Components.Base.Image ImageName="Logo.svg" css="h-14 w-auto" alt="BlueSkies logo"/>
      </a>
    </div>
    <div class="flex lg:hidden">
      <button type="button" class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700" @onclick="ToggleNavMenu">
        <span class="sr-only">Open main menu</span>
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
    <div class="hidden lg:flex lg:gap-x-12">
      <a href="/" class="text-sm font-semibold leading-6 text-gray-900">Home</a>
      <a href="/solarscore" class="text-sm font-semibold leading-6 text-gray-900">Solar Score</a>
      <a href="/advanced" class="text-sm font-semibold leading-6 text-gray-900">Advanced</a>
    </div>
    <div class="hidden lg:flex lg:flex-1 lg:justify-end">
      @* <Button style="outline">
        <content>
          <a href="/login" class="text-sm font-semibold leading-6 text-primary-500">Log in <span aria-hidden="true">&rarr;</span></a>
        </content>
      </Button> *@

      <div class="fixed top-5 right-3 flex flex-col-reverse justify-end items-end gap-4 z-30">
        <div class="shadow w-14 h-14 hover:w-40 transition-all duration-300 overflow-hidden bg-white rounded-full flex gap-2 border delay-[250ms] hover:delay-0 border-primary-500 p-2 items-center  @(isScrollingDown ? "opacity-100" : "opacity-0 -translate-y-40") ">
          <Image ImageName="Download.svg" alt="User Circle" css="w-10 h-10 scale-[.6]" />
          <p>Reports</p>
        </div>
        <a href="/dashboard" class="z-40  transition-all duration-300 overflow-hidden  bg-white rounded-full flex gap-2 border delay-[250ms] hover:delay-0 border-primary-500 p-2 items-center   @(isScrollingDown ? "shadow w-14 h-14 hover:w-44" : "-translate-y-20 w-44")">
          <Image ImageName="User Circle.svg" alt="User Circle" css="w-10 h-10" />
          <p>Username</p>
        </a>
        <div class="shadow w-14 h-14 hover:w-44 group transition-all duration-300 overflow-hidden  bg-white rounded-full flex gap-2 border delay-[250ms] hover:delay-0 border-primary-500 p-2 items-center  @(isScrollingDown ? "opacity-100" : "opacity-0") ">
          <Image ImageName="Logo-small.svg" alt="User Circle" css="w-10 h-10" />
          <p class="transition-all duration-300 group-hover:delay-200 delay-100 group-hover:translate-x-0 translate-x-20">Blue Skies</p>
        </div>
      </div>
    </div>
  </nav>
  <!-- Mobile menu, show/hide based on menu open state. -->
  @if (collapseNavMenu){
  <div class="lg:hidden" role="dialog" aria-modal="true">
    <!-- Background backdrop, show/hide based on slide-over state. -->
    <div class="fixed inset-0 z-10"></div>
    <div class="fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
      <div class="flex items-center justify-between">
        <a href="#" class="-m-1.5 p-1.5">
          <span class="sr-only">BlueSkies</span>
          <img class="h-8 w-auto" src="" alt="">
        </a>
        <button type="button" class="-m-2.5 rounded-md p-2.5 text-gray-700" @onclick="ToggleNavMenu">
          <span class="sr-only">Close menu</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  }
</header>



@code {
    private bool collapseNavMenu = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private int currentScrollPosition;
    private bool isScrollingDown = false;


    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("scrollUtils.getCurrentScrollPosition", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void UpdateScrollPosition(int scrollY)
    {
        if (scrollY > currentScrollPosition) isScrollingDown = true; else isScrollingDown = false;

        currentScrollPosition = scrollY;
        StateHasChanged();
    }
}
