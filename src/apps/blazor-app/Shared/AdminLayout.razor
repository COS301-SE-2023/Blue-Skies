@inherits LayoutComponentBase
@using BlazorApp.Components.Base
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStore

<PageTitle>Blue Skies</PageTitle>

@if (!isLoaded) {}
else if(!isAd){
    NavigationManager.NavigateTo("/unauthorized");
} else 
{
<div class="flex w-full h-full flex-row">
    <div class=" h-[100vh] p-4 border-1">
        <Image ImageName="Logo-small.svg" alt="Blue Skies Logo" css="w-20 h-20 mx-auto mt-8" />
        <div class="grid grid-cols-1 gap-5 mt-5 text-center">
            <a onclick="@(() => ChangePage("keys"))" class="@keys " href="/admin/keys">
                <Image ImageName="Key.svg" alt="Key Icon" css="w-8 h-8 mx-auto mt-8" /> 
                <p class="mt-2">API Keys</p>
            </a>
            <a onclick="@(() => ChangePage("appliances"))" class="@appliances" href="/admin/appliances">
                <Image ImageName="Lightbulb Bolt.svg" alt="Appliance Icon" css="w-8 h-8 mx-auto mt-8" />
                <p class="mt-2">Appliances</p>
            </a>
            <a onclick="@(() => ChangePage("products"))" class="@products" href="/admin/products">
                <Image ImageName="Panel.svg" alt="Blue Skies Logo" css="w-8 h-8 mx-auto mt-8" />  
                <p class="mt-2">Products</p>
            </a>
            <a onclick="@(() => ChangePage("stats"))" class="@stats" href="/admin/stats">
                <Image ImageName="Chart 2.svg" alt="Blue Skies Logo" css="w-8 h-8 mx-auto mt-8" />
                <p class="mt-2">Statistics</p>
            </a>
            <a onclick="@(() => logout())" href="/">
                <Image ImageName="Logout.svg" alt="Blue Skies Logo" css="w-8 h-8 mx-auto mt-8" />
                <p class="mt-2">Logout</p>
            </a>
        </div>
    </div>
    <div class="w-full">
            @Body
    </div>
</div>
}

@code {
    public string keys { get; set; } = "bg-slate-200 h-28 w-28 rounded-3xl";
    public string appliances { get; set; } = "h-28 w-28 rounded-3xl";
    public string products { get; set; } = "h-28 w-28 rounded-3xl";
    public string stats { get; set; } = "h-28 w-28 rounded-3xl";

    private bool isLoaded = false;
    private bool isAd = false;
    protected override async Task OnInitializedAsync()
    {
        var isAdmin = await ProtectedLocalStore.GetAsync<bool>("isAdmin");
        isAd = isAdmin.Value;
        isLoaded = true;
    }
    public async void logout() {
        await ProtectedLocalStore.SetAsync("isAdmin", false);
        await ProtectedLocalStore.SetAsync("loggedIn", false);
        await ProtectedLocalStore.SetAsync("userEmail", "");
        NavigationManager.NavigateTo("/");
    }

    public void ChangePage(string page) {
        keys = "h-28 w-28 rounded-3xl";
        appliances = "h-28 w-28 rounded-3xl";
        products = "h-28 w-28 rounded-3xl";
        stats = "h-28 w-28 rounded-3xl";

        switch (page) {
            case "keys":
                keys = "bg-slate-200 h-28 w-28 rounded-3xl";
                break;
            case "appliances":
                appliances = "bg-slate-200 h-28 w-28 rounded-3xl";
                break;
            case "products":
                products = "bg-slate-200 h-28 w-28 rounded-3xl";
                break;
            case "stats":
                stats = "bg-slate-200 h-28 w-28 rounded-3xl";
                break;
        }
    }
}